---

# project information
project_name: kometa
project_url: "https://github.com/Kometa-Team/Kometa"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kometa-banner.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a powerful tool designed to give you complete control over your media libraries. With {{ project_name|capitalize }}, you can take your customization to the next level, with granular control over metadata, collections, overlays, and much more."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: true
development_versions_items:
  - {tag: "latest", desc: "Stable releases."}
  - {tag: "develop", desc: "Latest commits from the develop branch"}
  - {tag: "nightly", desc: "Latest commits from the nightly branch"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files"}
# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "KOMETA_CONFIG", env_value: "/config/config.yml", desc: "Specify a custom config file to use."}
  - {env_var: "KOMETA_TIME", env_value: "03:00", desc: "Comma-separated list of times to update each day. Format: `HH:MM`."}
  - {env_var: "KOMETA_RUN", env_value: "False", desc: "Set to `True` to run without the scheduler."}
  - {env_var: "KOMETA_TEST", env_value: "False", desc: "Set to `True` to run in debug mode with only collections that have `test: true`."}
  - {env_var: "KOMETA_NO_MISSING", env_value: "False", desc: "Set to `True` to run without any of the missing movie/show functions."}
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  There is a [walkthrough](https://kometa.wiki/en/latest/kometa/install/docker/#setting-up-the-initial-config-file) available to help get you up and running.

  This image supports all of the environment variables listed [here](https://kometa.wiki/en/latest/kometa/environmental/) and all commandline arguments.

  To perform a one-time run use `docker run` (or `docker compose run`) with the `--rm`, and `-e KOMETA_RUN=True` or `--run` arguments. This will cause the container to process your config immediately instead of waiting for the scheduled time, and delete the old container after completion.

  For more information see the [official wiki](https://kometa.wiki).
# init diagram
init_diagram: |
  "kometa:nightly": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-kometa-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    base -> init-envfile
    init-config -> init-kometa-config
    init-config -> init-kometa-oneshot
    legacy-services -> init-kometa-shutdown
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-kometa
    svc-kometa -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.20"
  }
  "kometa:nightly" <- Base Images
# changelog
changelogs:
  - {date: "01.06.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "22.04.24:", desc: "Initial Release."}
